(defwindow bar
    :monitor 0
    :geometry (geometry :x "0%"
                        :y "0%"
                        :width "100%"
                        :height "30px"
                        :anchor "top center")
    :stacking "fg"
    :exclusive "true"
    :focusable "false"
    :hexpand "false"
    :vexpand "false"
    (main))

(defwidget main []
    (centerbox :class "main"
        :orientation "h"
        :space-evenly false
        (bar-left)
        (bar-center)
        (bar-right)))

(defwidget bar-left []
    (box :class "bar-left"
        :orientation "h"
        :space-evenly false
        :halign "start"
        (arch)))

(defwidget arch []
    (box :class "arch"
        "󰣇"))

(defwidget bar-center []
    (box :class "bar-center"
        :orientation "h"
        :space-evenly false
        :halign "center"
        (info   :icon ""
                :value {round(EWW_CPU.avg, 0) + "%"})
        (info   :icon ""
                :value {round(EWW_RAM.used_mem_perc, 0) + "%"})
        (info   :icon ""
                :value {round(EWW_DISK["/"].used_perc, 0) + "%"})))

(defwidget bar-right []
   (box :class "bar-right"
        :orientation "h"
        :space-evenly false
        :halign "end"
        (actioninfo :icon "󰃠"
                    :value {brightness + "%"}
                    :onscroll '~/.config/eww/scripts/brightness {}')
        (info   :icon "󰁹"
                :value {EWW_BATTERY["BAT0"].capacity + "%"})
        (info   :icon "󰥔"
                :class "time"
                (datetime))
        (button :onclick "eww open --toggle powermenu"
                :class "exit"
                "󰐥")))

; (defpoll battryicon `/sys/class/power_supply/BAT*/power_now`)
(deflisten battryicon :initial "whatever"
  `tail -F '/sys/class/power_supply/BAT0/status'`)

(defvar brightness "?")

(defvar showdate false)

(defwidget datetime []
    (eventbox :onhover "eww update showdate=true"
              :onhoverlost "eww update showdate=false"
              (box :orientation "h"
                   :space-evenly false
                   (revealer :transition 'slideright'
                             :reveal showdate
                             :duration "400ms"
                             (label :text date))
                   (label :text time))))

(defpoll time  :interval "1s"
                :initial "initial-value"
                'date +"%H:%M"')

(defpoll date  :interval "1s"
                :initial "initial-value"
                'date +"%a, %d %b %Y "')

(defwidget info [icon ?value]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
       (box :class "icon"
            icon)
       (box :class "info"
            :space-evenly false
            value
        (children))))

(defwidget actioninfo [icon value ?onscroll ?onhover ?onhoverlost ?onclick ]
      (eventbox :onscroll onscroll
                :onhover onhover
                :onhoverlost onhoverlost
                :onclick onclick
                (info :icon icon
                      :value value)))

; TODO
(defwidget powermenu_layout []
  (eventbox :class "powermenubg" 
            :space-evenly true
            :orientation "h"
            :onclick "eww open --toggle powermenu"
            (box :class "powermenufg"
                 :height 190
                 :width 700
                 :valign "center"
                 :halign "center"
                 (button    :class "powerbtn poweroff"
                            :onclick "notify-send poweroff"
                            "󰐥")
                 (button    :class "powerbtn reboot"
                            :onclick "notify-send reboot"
                            "󰜉")
                 (button    :class "powerbtn suspend"
                            :onclick "notify-send suspend"
                            "󰤄")
                 (button    :class "powerbtn logout"
                            :onclick "notify-send logout"
                            ""))))


(defwindow powermenu
  :monitor 0
  :stacking "fg"
  :geometry (geometry :width "100%"
                      :height "97%"
                      :anchor "center")
(powermenu_layout))
